# Generated by Django 3.0.8 on 2020-07-16 09:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simpellab.core.enums
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('simpellab_partners', '0003_remove_partnercontact_privacy'),
        ('simpellab_products', '0002_auto_20200716_0201'),
    ]

    operations = [
        migrations.CreateModel(
            name='SalesQuotationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('deleted', models.BooleanField(default=False, editable=False)),
                ('modified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=512, verbose_name='Template name')),
                ('body', models.TextField(max_length=10000, verbose_name='Quotation body')),
            ],
            options={
                'verbose_name': 'Sales Quotation (Template)',
                'verbose_name_plural': 'Sales Quotations (Templates)',
            },
        ),
        migrations.CreateModel(
            name='SalesQuotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('deleted', models.BooleanField(default=False, editable=False)),
                ('modified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('reg_number', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Reg number')),
                ('inner_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Inner ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('title', models.CharField(max_length=512, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=10000, null=True, verbose_name='Description')),
                ('due_date', models.DateTimeField(verbose_name='Due date')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total Amount')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Discount in percent', max_digits=15, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total discount')),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Grand Total')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='simpellab_partners.Partner', verbose_name='Customer')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='simpellab_sales.SalesQuotationTemplate', verbose_name='Letter Template')),
            ],
            options={
                'verbose_name': 'Sales Quotation',
                'verbose_name_plural': 'Sales Quotations',
                'permissions': (('draft_salesquotation', 'Can draft Sales Quotation'), ('trash_salesquotation', 'Can trash Sales Quotation'), ('validate_salesquotation', 'Can validate Sales Quotation'), ('revision_salesquotation', 'Can revision Sales Quotation'), ('apply_salesquotation', 'Can apply Sales Quotation')),
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('deleted', models.BooleanField(default=False, editable=False)),
                ('modified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('reg_number', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Reg number')),
                ('inner_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Inner ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('status', models.CharField(choices=[('TRS', 'Trash'), ('DRF', 'Draft'), ('VLD', 'Valid'), ('APP', 'Approved'), ('RJC', 'Rejected'), ('PRS', 'Processed'), ('CMP', 'Complete'), ('INV', 'Invoiced'), ('PND', 'Pending'), ('UNP', 'Un Paid'), ('PID', 'Paid'), ('CLS', 'Closed'), ('PST', 'Posted')], default='DRF', editable=False, max_length=6, verbose_name='Status')),
                ('date_trashed', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date trashed')),
                ('date_drafted', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date drafted')),
                ('date_validated', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date validated')),
                ('date_completed', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date completed')),
                ('is_specific', models.BooleanField(default=False, editable=False, help_text='Group product order by order type', verbose_name='Is specific')),
                ('product_type', models.CharField(choices=[('AST', 'Asset'), ('INV', 'Inventory'), ('LAB', 'Laboratory'), ('LIT', 'Inspection'), ('KAL', 'Calibration'), ('LIB', 'Research and Development'), ('KSL', 'Consultancy'), ('PRO', 'Product Certification'), ('LAT', 'Training'), ('ANY', 'Any')], default='ANY', max_length=128, verbose_name='Service Type')),
                ('customer_po', models.CharField(blank=True, max_length=512, null=True, verbose_name='Customer PO')),
                ('note', models.CharField(blank=True, max_length=512, null=True, verbose_name='Note')),
                ('total_order', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total Order')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Discount in percent', max_digits=15, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total discount')),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Grand Total')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='simpellab_partners.Partner', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Sales Order',
                'verbose_name_plural': 'Sales Orders',
                'permissions': (('draft_salesorder', 'Can draft Sales Order'), ('trash_salesorder', 'Can trash Sales Order'), ('validate_salesorder', 'Can validate Sales Order'), ('complete_salesorder', 'Can complete Sales Order')),
            },
        ),
        migrations.CreateModel(
            name='QuotationTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('term', models.CharField(blank=True, max_length=512, null=True, verbose_name='Term')),
                ('condition', models.CharField(blank=True, max_length=512, null=True, verbose_name='Condition')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotation_terms', to='simpellab_sales.SalesQuotation', verbose_name='Quotation')),
            ],
            options={
                'verbose_name': 'Quotation Term',
                'verbose_name_plural': 'Quotation Terms',
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(blank=True, max_length=512, null=True, verbose_name='Name')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Product price')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Minimal value: 1'), django.core.validators.MaxValueValidator(500, message='Maximal value: 500')], verbose_name='Quantity')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total Price')),
                ('note', models.CharField(blank=True, max_length=512, null=True, verbose_name='Note')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='simpellab_sales.SalesOrder', verbose_name='Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_products', to='simpellab_products.Product')),
            ],
            options={
                'verbose_name': 'Sales Order Item',
                'verbose_name_plural': 'Sales Order Items',
                'ordering': ('product',),
                'unique_together': {('order', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('deleted', models.BooleanField(default=False, editable=False)),
                ('modified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('reg_number', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Reg number')),
                ('inner_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Inner ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('qrcode', models.ImageField(blank=True, editable=False, null=True, upload_to='qrcode')),
                ('status', models.CharField(choices=[('TRS', 'Trash'), ('DRF', 'Draft'), ('VLD', 'Valid'), ('APP', 'Approved'), ('RJC', 'Rejected'), ('PRS', 'Processed'), ('CMP', 'Complete'), ('INV', 'Invoiced'), ('PND', 'Pending'), ('UNP', 'Un Paid'), ('PID', 'Paid'), ('CLS', 'Closed'), ('PST', 'Posted')], default='DRF', editable=False, max_length=6, verbose_name='Status')),
                ('date_trashed', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date trashed')),
                ('date_paid', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date paid')),
                ('date_closed', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date closed')),
                ('due_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Due date')),
                ('description', models.TextField(blank=True, max_length=simpellab.core.enums.MaxLength['TEXT'], null=True, verbose_name='Description')),
                ('total_order', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total Order')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Discount in percent', max_digits=15, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total discount')),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Grand Total')),
                ('downpayment', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='down payment')),
                ('repayment', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='repayment')),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='paid')),
                ('receivable', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='receivable')),
                ('refund', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='refund')),
                ('sales_order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='simpellab_sales.SalesOrder', verbose_name='sales order')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='QuotationProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Product price')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Minimal value: 1'), django.core.validators.MaxValueValidator(500, message='Maximal value: 500')], verbose_name='Quantity')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total Price')),
                ('note', models.CharField(blank=True, max_length=512, null=True, verbose_name='Note')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotation_products', to='simpellab_products.Product')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotation_products', to='simpellab_sales.SalesQuotation', verbose_name='Quotation')),
            ],
            options={
                'verbose_name': 'Quotation Item',
                'verbose_name_plural': 'Quotation Items',
                'ordering': ('product',),
                'unique_together': {('quotation', 'product')},
            },
        ),
        migrations.CreateModel(
            name='QuotationExtraFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Fee amount')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Minimal value: 1'), django.core.validators.MaxValueValidator(500, message='Maximal value: 500')], verbose_name='Quantity')),
                ('total_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total fee')),
                ('note', models.CharField(blank=True, max_length=512, null=True, verbose_name='Note')),
                ('fee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotation_fees', to='simpellab_products.Fee')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotation_fees', to='simpellab_sales.SalesQuotation', verbose_name='Quotation')),
            ],
            options={
                'verbose_name': 'Quotation Fees',
                'verbose_name_plural': 'Quotation Fees',
                'ordering': ('fee',),
                'unique_together': {('quotation', 'fee')},
            },
        ),
        migrations.CreateModel(
            name='OrderFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Fee amount')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Minimal value: 1'), django.core.validators.MaxValueValidator(500, message='Maximal value: 500')], verbose_name='Quantity')),
                ('total_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total fee')),
                ('note', models.CharField(blank=True, max_length=512, null=True, verbose_name='Note')),
                ('fee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_fees', to='simpellab_products.Fee')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_fees', to='simpellab_sales.SalesOrder', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Order Fees',
                'verbose_name_plural': 'Order Fees',
                'ordering': ('fee',),
                'unique_together': {('order', 'fee')},
            },
        ),
        migrations.CreateModel(
            name='ExtraParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Price')),
                ('date_effective', models.DateField(default=django.utils.timezone.now, verbose_name='Date effective')),
                ('order_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_parameters', to='simpellab_sales.OrderProduct', verbose_name='Product')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_parameters', to='simpellab_products.Parameter', verbose_name='Parameter')),
            ],
            options={
                'verbose_name': 'Extra Parameter',
                'verbose_name_plural': 'Extra Parameters',
                'unique_together': {('order_product', 'parameter')},
            },
        ),
    ]
